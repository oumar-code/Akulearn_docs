name: Render Mermaid Diagrams

on:
  push:
    branches:
      - docs-copilot-refactor
      - main
  pull_request:
    branches:
      - docs-copilot-refactor
      - main

permissions:
  contents: write

jobs:
  render-and-commit:
    name: Render Mermaid and commit PNGs
    runs-on: ubuntu-latest
    # avoid running PR creation on main; we'll only open/update PRs for feature branches
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install mermaid-cli
        run: |
          npm install -g @mermaid-js/mermaid-cli

      - name: Validate Mermaid syntax (render to temp SVG)
        run: |
          set -euo pipefail
          mkdir -p docs/diagrams
          for f in $(find docs/diagrams -name '*.mmd' -print); do
            tmp="/tmp/$(basename "${f%.*}").svg"
            echo "Validating $f"
            # Render to a temp SVG to ensure syntax & rendering succeed
            mmdc -i "$f" -o "$tmp" || (echo "Mermaid validation failed for $f"; exit 1)
            rm -f "$tmp"
          done
        shell: bash

      - name: Render Mermaid diagrams to PNG and SVG
        run: |
          set -euo pipefail
          mkdir -p docs/diagrams
          for f in $(find docs/diagrams -name '*.mmd' -print); do
            out_png="${f%.*}.png"
            out_svg="${f%.*}.svg"
            echo "Rendering $f -> $out_svg and $out_png"
            # Render SVG first (vector), then PNG fallback
            mmdc -i "$f" -o "$out_svg" || (echo "Failed rendering SVG for $f"; exit 1)
            mmdc -i "$f" -o "$out_png" || (echo "Failed rendering PNG for $f"; exit 1)
          done
        shell: bash

      - name: Stage generated diagram files
        id: stage_changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/diagrams/*.png docs/diagrams/*.svg || true
          # indicate whether there are staged changes
          if git diff --cached --quiet; then
            echo "staged=false" >> $GITHUB_OUTPUT
          else
            echo "staged=true" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Create pull request with rendered diagrams (commit staged changes)
        if: steps.stage_changes.outputs.staged == 'true' && github.ref_name != 'main'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(docs): add rendered mermaid diagrams (png, svg)"
          branch: "auto/render-mermaid-${{ github.run_id }}"
          title: "chore(docs): render mermaid diagrams (png, svg)"
          body: |
            This automated PR contains rendered Mermaid diagram assets (PNG and SVG) generated by CI.
            The PR was created by the render-mermaid workflow and includes the committed diagram images generated from the .mmd sources.
          base: main
          # The action will create a commit from the current working tree (staged files)
          # Leave 'labels' or reviewers to maintainers as desired
